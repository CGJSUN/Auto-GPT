name: Docker CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ format('docker-ci-{0}', github.head_ref && format('pr-{0}', github.event.pull_request.number) || github.sha) }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  IMAGE_NAME: auto-gpt

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - id: build
      name: Build image
      uses: docker/build-push-action@v3
      with:
        load: true    # save to docker images
        # cache layers in GitHub Actions cache to speed up builds
        cache-from: 'type=gha'
        cache-to: type=gha,mode=max

    - name: Generate build report
      env:
        event_name: ${{ github.event_name }}
        event_ref: ${{ github.event.ref }}
        event_ref_type: ${{ github.event.ref}}

        prod_branch: stable
        dev_branch: master
        repository: ${{ github.repository }}
        base_branch: ${{ github.ref_name != 'master' && github.ref_name != 'stable' && 'master' || 'stable' }}

        current_ref: ${{ github.ref_name }}
        commit_hash: ${{ github.event.after }}
        source_url: ${{ github.event.head_commit.url }}
        push_forced_label: ${{ github.event.forced && '☢️ forced' || '' }}

        head_compare_url: ${{ github.event.compare }}
        new_commits_json: ${{ toJSON(github.event.commits) }}
        compare_url_template: ${{ format('/{0}/compare/{{base}}...{{head}}', github.repository) }}

        github_context_json: ${{ toJSON(github) }}
        job_env_json: ${{ toJSON(env) }}
        vars_json: ${{ toJSON(vars) }}

      run: .github/workflows/scripts/docker-ci-summary.sh >> $GITHUB_STEP_SUMMARY
      continue-on-error: true

  # Docker setup needs fixing before this is going to work: #1843
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - id: build
      name: Build image
      uses: docker/build-push-action@v3
      with:
        build-args: BUILD_TYPE=dev  # include pytest
        load: true                  # save to docker images
        tags: ${{ env.IMAGE_NAME }}
        # cache layers in GitHub Actions cache to speed up builds
        cache-from: 'type=gha'
        cache-to: type=gha,mode=max

    - id: test
      name: Run tests
      env:
        CI: true
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        test_output=$(
          docker run --entrypoint python ${{ env.IMAGE_NAME }} -m
          pytest --cov=autogpt --cov-report term-missing --cov-branch --cov-report xml --cov-report term 2>&1
        )
        test_failure=$?

        echo "$test_output"

        cat << $EOF >> $GITHUB_STEP_SUMMARY
        # Tests $([ $test_failure = 0 ] && echo '✅' || echo '❌')
        \`\`\`
        $test_output
        \`\`\`
        $EOF
